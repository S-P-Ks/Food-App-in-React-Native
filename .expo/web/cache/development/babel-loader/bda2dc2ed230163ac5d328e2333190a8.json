{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\deep patel\\\\myfood\\\\pages\\\\foodpage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport firestore from '@react-native-firebase/firestore';\n\nfunction Users() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  useEffect(function () {\n    var subscriber = firestore().collection('food').onSnapshot(function (querySnapshot) {\n      var users = [];\n      querySnapshot.forEach(function (documentSnapshot) {\n        users.push(_objectSpread(_objectSpread({}, documentSnapshot.data()), {}, {\n          key: documentSnapshot.id\n        }));\n      });\n      setUsers(users);\n      setLoading(false);\n    });\n    return function () {\n      return subscriber();\n    };\n  }, []);\n\n  if (loading) {\n    return React.createElement(ActivityIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(FlatList, {\n    data: users,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 50,\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, \"User ID: \", item.id), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \"User Name: \", item.name));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default Users;","map":{"version":3,"sources":["D:/deep patel/myfood/pages/foodpage.js"],"names":["React","useState","useEffect","firestore","Users","loading","setLoading","users","setUsers","subscriber","collection","onSnapshot","querySnapshot","forEach","documentSnapshot","push","data","key","id","item","height","flex","alignItems","justifyContent","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACeH,QAAQ,CAAC,IAAD,CADvB;AAAA;AAAA,MACRI,OADQ;AAAA,MACCC,UADD;;AAAA,mBAEWL,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,MAERM,KAFQ;AAAA,MAEDC,QAFC;;AAIfN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,UAAU,GAAGN,SAAS,GAC3BO,UADkB,CACP,MADO,EAElBC,UAFkB,CAEP,UAAAC,aAAa,EAAI;AAC3B,UAAML,KAAK,GAAG,EAAd;AAEAK,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,gBAAgB,EAAI;AACxCP,QAAAA,KAAK,CAACQ,IAAN,iCACKD,gBAAgB,CAACE,IAAjB,EADL;AAEEC,UAAAA,GAAG,EAAEH,gBAAgB,CAACI;AAFxB;AAID,OALD;AAOAV,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAdkB,CAAnB;AAiBF,WAAO;AAAA,aAAMG,UAAU,EAAhB;AAAA,KAAP;AACC,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,MAAIJ,OAAJ,EAAa;AACX,WAAO,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAGD,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEE,KADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGY,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,IAAI,EAAE,CAApB;AAAuBC,UAAAA,UAAU,EAAE,QAAnC;AAA6CC,UAAAA,cAAc,EAAE;AAA7D,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgBJ,IAAI,CAACD,EAArB,CADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBC,IAAI,CAACK,IAAvB,CAFF,CADU;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD;;AAED,eAAepB,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ActivityIndicator, FlatList, View, Text } from 'react-native';\r\nimport firestore from '@react-native-firebase/firestore';\r\n\r\nfunction Users() {\r\n  const [loading, setLoading] = useState(true); // Set loading to true on component mount\r\n  const [users, setUsers] = useState([]); // Initial empty array of users\r\n\r\n  useEffect(() => {\r\n    const subscriber = firestore()\r\n    .collection('food')\r\n    .onSnapshot(querySnapshot => {\r\n      const users = [];\r\n\r\n      querySnapshot.forEach(documentSnapshot => {\r\n        users.push({\r\n          ...documentSnapshot.data(),\r\n          key: documentSnapshot.id,\r\n        });\r\n      });\r\n\r\n      setUsers(users);\r\n      setLoading(false);\r\n    });\r\n\r\n  // Unsubscribe from events when no longer in use\r\n  return () => subscriber();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <ActivityIndicator />;\r\n  }\r\n  \r\n\r\n  return (\r\n    <FlatList\r\n      data={users}\r\n      renderItem={({ item }) => (\r\n        <View style={{ height: 50, flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n          <Text>User ID: {item.id}</Text>\r\n          <Text>User Name: {item.name}</Text>\r\n        </View>\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}