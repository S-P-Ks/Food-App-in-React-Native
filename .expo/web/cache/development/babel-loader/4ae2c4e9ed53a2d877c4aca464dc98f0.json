{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\deep patel\\\\myfood\\\\pages\\\\foodpage.js\";\nimport React, { useState, useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport firestore from '@react-native-firebase/firestore';\n\nfunction Users() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  useEffect(function () {\n    var subscriber = firestore().collection('food').onSnapshot(function () {});\n    return function () {\n      return subscriber();\n    };\n  }, []);\n\n  if (loading) {\n    return React.createElement(ActivityIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["D:/deep patel/myfood/pages/foodpage.js"],"names":["React","useState","useEffect","firestore","Users","loading","setLoading","users","setUsers","subscriber","collection","onSnapshot"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,SAASC,KAAT,GAAiB;AAAA,kBACeH,QAAQ,CAAC,IAAD,CADvB;AAAA;AAAA,MACRI,OADQ;AAAA,MACCC,UADD;;AAAA,mBAEWL,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,MAERM,KAFQ;AAAA,MAEDC,QAFC;;AAIfN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,UAAU,GAAGN,SAAS,GACzBO,UADgB,CACL,MADK,EAEhBC,UAFgB,CAEL,YAAM,CAEjB,CAJgB,CAAnB;AAOA,WAAO;AAAA,aAAMF,UAAU,EAAhB;AAAA,KAAP;AACD,GATQ,EASN,EATM,CAAT;;AAWA,MAAIJ,OAAJ,EAAa;AACX,WAAO,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAGF","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ActivityIndicator } from 'react-native';\r\nimport firestore from '@react-native-firebase/firestore';\r\n\r\nfunction Users() {\r\n  const [loading, setLoading] = useState(true); // Set loading to true on component mount\r\n  const [users, setUsers] = useState([]); // Initial empty array of users\r\n\r\n  useEffect(() => {\r\n    const subscriber = firestore()\r\n      .collection('food')\r\n      .onSnapshot(() => {\r\n        // see next step\r\n      });\r\n\r\n    // Unsubscribe from events when no longer in use\r\n    return () => subscriber();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <ActivityIndicator />;\r\n  }\r\n\r\n  // ...\r\n}\r\n"]},"metadata":{},"sourceType":"module"}